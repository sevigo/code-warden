# .env

# -------------------------------------
# -- APPLICATION SETTINGS
# -------------------------------------
# Server port for the Code-Warden application
SERVER_PORT=8080

# Logging level (e.g., "debug", "info", "warn", "error")
LOG_LEVEL="info"

# Maximum number of concurrent review jobs
MAX_WORKERS=5

# -------------------------------------
# -- GITHUB APP (REQUIRED)
# -------------------------------------
# These values are required for the application to authenticate with GitHub.
GITHUB_APP_ID=<your_github_app_id>
GITHUB_WEBHOOK_SECRET="<your_github_webhook_secret>"

# Path to the .pem private key for your GitHub App.
# The default path assumes a `keys` directory in the project root.
GITHUB_PRIVATE_KEY_PATH="keys/code-warden-app.private-key.pem"

# -------------------------------------
# -- LLM PROVIDER CONFIGURATION
# -------------------------------------
# Main provider for generating reviews. Supported: "ollama", "gemini"
LLM_PROVIDER="ollama"

# -- Ollama Settings (if provider is "ollama") --
# Host for the Ollama server. Use 'http://localhost:11434' for local dev,
# or 'http://ollama:11434' when running in the provided docker-compose setup.
OLLAMA_HOST="http://localhost:11434"

# Model used for generating reviews (e.g., "gemma3", "llama3", "codellama")
GENERATOR_MODEL_NAME="gemma3:latest"

# Model used for creating embeddings (e.g., "nomic-embed-text", "mxbai-embed-large")
EMBEDDER_MODEL_NAME="nomic-embed-text"


# -- Gemini Settings (if provider is "gemini") --
# API Key from Google AI Studio. Required if using the "gemini" provider.
GEMINI_API_KEY="<your_gemini_api_key>"

# Optional: If you want to use a specific Gemini model for generation, set it here.
# Defaults to "gemini-1.5-flash" if not set.
# GEMINI_GENERATOR_MODEL_NAME="gemini-2.5-pro"


# -------------------------------------
# -- STORAGE
# -------------------------------------
# Host and port for the Qdrant vector database. Use 'localhost:6334' for local dev,
# or 'qdrant:6334' when running in the provided docker-compose setup.
QDRANT_HOST="localhost:6334"

# Local file system path to store cloned git repositories.
REPO_PATH="./data/repos"


# -------------------------------------
# -- DATABASE (PostgreSQL)
# -------------------------------------
# Use 'localhost' for local dev, or 'db' for the provided docker-compose setup.
DB_HOST=localhost
DB_PORT=5432
DB_NAME=codewarden
DB_USERNAME=postgres
DB_PASSWORD=password
DB_SSL_MODE=disable

# Database connection pool settings
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME="5m"
DB_CONN_MAX_IDLE_TIME="5m"